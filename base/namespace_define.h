#ifndef _BASE_NAMESPACE_H_
#define _BASE_NAMESPACE_H_

#define BEGIN_NAMESPACE(ns) namespace ns {
#define END_NAMESPACE()    }


#define BASE_TIME base::time
#define BEGIN_NAMESPACE_TIME BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(time)
#define END_NAMESPACE_TIME END_NAMESPACE() END_NAMESPACE()


#define BASE_LOOPER base::looper
#define BEGIN_NAMESPACE_LOOPER BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(looper)
#define END_NAMESPACE_LOOPER END_NAMESPACE() END_NAMESPACE()


#define BASE_LOG base::log
#define BEGIN_NAMESPACE_LOG BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(log)
#define END_NAMESPACE_LOG END_NAMESPACE() END_NAMESPACE()

#define BASE_THREAD base::thread
#define BEGIN_NAMESPACE_THREAD BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(thread)
#define END_NAMESPACE_THREAD END_NAMESPACE() END_NAMESPACE()


#define BASE_NET base::net
#define BEGIN_NAMESPACE_NET BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(net)
#define END_NAMESPACE_NET END_NAMESPACE() END_NAMESPACE()


#define BASE_UTIL base::util
#define BEGIN_NAMESPACE_UTIL BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(util)
#define END_NAMESPACE_UTIL END_NAMESPACE() END_NAMESPACE()

#define BASE_STRING_UTIL base::stringutil
#define BEGIN_NAMESPACE_STRING BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(stringutil)
#define END_NAMESPACE_STRING END_NAMESPACE() END_NAMESPACE()


#define BASE_CRYPTO base::crypto
#define BEGIN_NAMESPACE_CRYPTO BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(crypto)
#define END_NAMESPACE_CRYPTO END_NAMESPACE() END_NAMESPACE()

#define BASE_IPC base::ipc
#define BEGIN_NAMESPACE_IPC BEGIN_NAMESPACE(base) BEGIN_NAMESPACE(ipc)
#define END_NAMESPACE_IPC END_NAMESPACE() END_NAMESPACE()

#endif
